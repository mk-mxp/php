    }
    
    /*
     * Unknown data:
     * {"an-unknown-item":"will render as multiline comment with JSON"}
     */
    
    /**
     * uuid: 31a673f2-5e54-49fe-bd79-1c1dae476c9c
     * @testdox First description
     * @test
     */
    public function firstDescription(): void
    {
        $this->markTestSkipped('This test has not been implemented yet.');
        
        $input = array (
          'argumentName' => 
          array (
          ),
        );
        $expected = true;
        
        $actual = $this->subject->someProperty(...$input);
        
        $this->assertSame($expected, $actual);
    }
    
    /*
     * Unknown data:
     * {"description":"first description","cases":[{"uuid":"4f99b933-367b-404b-8c6d-36d5923ee476","description":"second description","property":"otherProperty","input":{"otherArgumentName":[[1,1]]},"expected":"some value"},{"also-unknown":"resulting in multiline comment with JSON"}]}
     */
    
    /**
     * uuid: 91122d10-5ec7-47cb-b759-033756375869
     * @testdox And a last one
     * @test
     */
    public function andALastOne(): void
    {
        $this->markTestSkipped('This test has not been implemented yet.');
        
        $input = array (
          'argumentName' => 
          array (
            0 => 
            array (
              0 => 1,
              1 => 2,
            ),
          ),
        );
        $expected = array (
          0 => 
          array (
            0 => 1,
            1 => 1,
            2 => 3,
          ),
        );
        
        $actual = $this->subject->alsoProperty(...$input);
        
        $this->assertSame($expected, $actual);
    }
}
